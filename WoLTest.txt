#include <SPI.h>
#include <WiFiNINA.h>

#include "arduino_secrets.h"
///////please enter your sensitive data in the Secret tab/arduino_secrets.h
char ssid[] = SECRET_SSID;        // your network SSID (name)
char pass[] = SECRET_PASS;    // your network password (use for WPA, or use as key for WEP)
char macAddress[] = MAC_ADDRESS; // the destination PC to be woken up
int status = WL_IDLE_STATUS;     // the WiFi radio's status

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  while (!Serial) {
    ; // wait for serial port to connect. Needed for native USB port only
  }

  // check for the WiFi module:
  if (WiFi.status() == WL_NO_MODULE) {
    Serial.println("Communication with WiFi module failed!");
    // don't continue
    while (true);
  }

  String fv = WiFi.firmwareVersion();
  if (fv < "1.0.0") {
    Serial.println("Please upgrade the firmware");
  }

  // attempt to connect to WiFi network:
  while ( status != WL_CONNECTED) {
    Serial.print("Attempting to connect to WPA SSID: ");
    Serial.println(ssid);
    // Connect to WPA/WPA2 network:
    status = WiFi.begin(ssid, pass);

    // wait 5 seconds for connection:
    delay(5000);
  }

  // you're connected now, so print out the data:
  Serial.println("You're connected to the network");
  printCurrentNet();
  printWiFiData();
  
  sendWOLMP();
}

void loop() {
}

void sendWOLMP(){
Serial.println("Sending Wake-On-Lan Magic Packet");

WiFiUDP.beginPacket(255.255.255.255, 7);
WifiUDP.Write(0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF);
for (int i = 0, i <16, i++){
WifiUDP.Write(macAddress);
}
WiFiUDP.endPacket();

Serial.println("Wake-On-Lan Magic Packet sent");
}