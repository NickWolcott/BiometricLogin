#include <Wire.h>
#include <EEPROM.h>

String userUser = "";
String userPass = "";

char changeCred[1];

char abuffer[99];
boolean receiveFlag = false;
String userbuffer[5];

char aUsername[99];
char aPassword[99];

int credAdd = 0;

void setup() {
  Serial.begin(9600);

delay(500);

  long int currmil = millis();
  getStoredCred();
  startConfig(currmil);
  startSend();
}

void loop() {
}


void serialInputUser() {
  Serial.print("Please enter your Username: ");

  while (userUser == "") {
    if (Serial.available() > 0) { //recieves data only if it can be recieved

      userUser = Serial.readString(); //recieves user input
      strcpy(aUsername, userUser.c_str());

      Serial.println(userUser);
    }
  }

  Serial.print("Please enter your Password: ");

  while (userPass == "") {
    if (Serial.available() > 0) { //recieves data only if it can be recieved

      userPass = Serial.readString(); //recieves user input
      strcpy(aPassword, userPass.c_str());
      Serial.println(userPass);
    }
  }

  EEPROM.put(credAdd, aUsername);
  credAdd += sizeof(aUsername);
  EEPROM.put(credAdd, aPassword);

  Serial.print("Your username is ");
  Serial.println(aUsername);
  Serial.print("Your password is ");
  Serial.println(aPassword);
}


void startConfig(long int currmil) {
  while (millis() - currmil < 5000) {
    if (Serial) {
      Serial.println("Change credentials (Y/N)?");

      Serial.setTimeout(5000);

      Serial.readBytes(changeCred, 1);

      if (String(changeCred).equalsIgnoreCase("Y"))
      {
        while ((userUser == "") || (userPass == ""))
        {
          serialInputUser();
        }
      }
      else {
        break;
      }
    }
  }
}


void startSend() {
  Serial.println("Sending credentials");
  Wire.begin(); // join i2c bus (address optional for master)
  sendEvent();
}

void sendEvent() {
  Wire.beginTransmission(1);
  Serial.print("Sending username: ");
  Serial.println(aUsername);
  Wire.write(aUsername);
  Wire.endTransmission();

  Wire.beginTransmission(1);
  Serial.print("Sending password: ");
  Serial.println(aPassword);
  Wire.write(aPassword);
  Wire.endTransmission();

}

void getStoredCred(){
  EEPROM.get(credAdd, aUsername);
  Serial.print("Retreived username: ");
  Serial.println(aUsername);
  credAdd += sizeof(aUsername);
  EEPROM.get(credAdd, aPassword);
  Serial.print("Retreived password: ");
  Serial.println(aPassword);
  
  credAdd = 0;
}
